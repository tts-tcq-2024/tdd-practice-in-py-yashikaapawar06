Test_case_ID,Test Case Name,Input,Expected output ,Description
1,test_expectZeroForEmptyInput,""" """,0,Verify that the function returns 0 when given an empty string as input.
2,test_expectZeroForSingleZero,"""0""",0,Check that the function returns 0 when the input string contains a single zero.
3,test_expectSumForTwoNumbers,"""1,2""",3,Test the addition of two positive integers separated by a comma.
4,test_ignoreNumbersGreaterThan1000,"""1,1001""",1,Ensure that the function ignores numbers greater than 1000 in the input string.
5,test_expectSumWithCustomDelimiter,"""//;\n1;2""",3,"Verify that the function correctly handles a custom delimiter (in this case, `;`) and returns the sum of the numbers."
6,test_expectSumWithNewlineDelimiter,"""1\n2,3""",6,Test the addition of numbers separated by both newline and comma delimiters.
7,test_throwExceptionForNegativeNumbers,"""1,-2""","Raises `ValueError` with message `""Negatives not allowed: -2""",Ensure that the function raises an appropriate exception when the input contains negative numbers.
8,test_allowUnknownAmountOfNumbers,"""1,2,3,4,5""",15,Verify that the function can handle an unknown number of comma-separated values and returns the correct sum.
9,test_customDelimiterWithMultipleCharacters,"""//[***]\n1***2***3""",6,"Verify that the function can handle custom delimiters of arbitrary length (e.g., ***) and return the correct sum of the numbers."
10,test_handleAlphanumericCharacters,"""abc,123""","Raises ValueError with message ""Invalid input: contains non-numeric characters""",Verify that the function raises an appropriate exception when the input contains alphanumeric characters that are not valid numbers.
11,test_handleOnlyDelimiters,""",,,\n""",0,Ensure that the function returns 0 when the input contains only delimiters without any numbers.
12,test_handleInputOf1000,"""1000""",1000,Test that the function correctly includes the number 1000 in the sum calculation.
13,test_customDelimiterWithEmptyInput,"""//[***]\n""",0," Ensure that the function returns 0 when no numbers are provided, even if a custom delimiter is specified."
14,test_customDelimiterWithSpecialCharacters,"""//[!@#]\n1!@#2!@#3""",6," Ensure that the function correctly handles custom delimiters containing special characters (e.g., !@#)."
